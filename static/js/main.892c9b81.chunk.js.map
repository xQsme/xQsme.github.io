{"version":3,"sources":["reducers/auth.ts","store.ts","actions/auth.ts","api.ts","components/controllers/AuthenticationController.tsx","components/controllers/AuthenticationContext.tsx","components/elements/Loader.tsx","components/views/Upload.tsx","components/views/Login.tsx","components/screens/Parent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INITIAL_STATE","username","password","isAuthenticated","composeEnhancers","composeWithDevTools","compose","middlewares","ReduxThunk","config","key","storage","debug","process","blacklist","reducers","persistCombineReducers","auth","state","type","payload","REHYDRATE","loginSuccessActionCreator","SERVER","setupRequestInterceptor","store","axios","interceptors","request","use","reqConfig","getState","token","btoa","newConfig","headers","Authorization","err","Promise","reject","setupResponseInterceptor","response","error","status","dispatch","setupAPI","a","create","withCredentials","AuthenticationController","submitLogin","dispatchRequestLogin","props","submitLogout","dispatchRequestLogout","this","children","AuthenticationContextProvider","value","Component","ConnectedAuthenticationController","connect","get","Comp","toast","console","log","requestLogin","authenticationContextDefaultValue","AuthenticationContext","createContext","Provider","AuthenticationContextConsumer","Consumer","withAuthenticationContext","ctx","Loader","className","now","moment","initialState","company","documentNr","documentDate","accountPeriod","Number","format","interfaceType","preparedBy","submitting","linesCreated","interfaceKey","validCompany","undefined","validInterface","validPrepared","table","tableHeaders","label","loggingOut","onSelectDay","date","setState","handleChange","evt","target","name","submit","comp","data","VALID","IntType","interf","User","user","json","forEach","row","col","index","push","InterfaceKey","coitus","dodtpe","post","result","res","XMLParser","parseFromString","count","find","el","success","logout","onHeaderChange","onTableChange","i","j","onTablePaste","preventDefault","rows","clipboardData","getData","split","map","y","some","x","ignored","addRow","removeRow","length","pop","totalDebits","debits","findIndex","isNaN","totalCredits","TextField","disabled","required","onChange","variant","InputProps","endAdornment","InputAdornment","position","utils","MomentUtils","disableToolbar","id","KeyboardButtonProps","inputVariant","Button","color","onClick","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","toFixed","header","onPaste","renderHeader","renderSideContent","renderTable","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","login","Login","createStore","applyMiddleware","persistor","persistStore","configureStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.892c9b81.chunk.js","sourcesContent":["import { REHYDRATE } from 'redux-persist';\r\n\r\ninterface AuthReducer {\r\n    username: string;\r\n    password: String;\r\n    isAuthenticated: Boolean;\r\n}\r\n\r\nconst INITIAL_STATE: AuthReducer = {\r\n    username: '',\r\n    password: '',\r\n    isAuthenticated: false,\r\n};\r\n\r\nexport default function authReducer(state = INITIAL_STATE, { type, payload }: any) {\r\n    switch (type) {\r\n        case REHYDRATE:\r\n            if (payload && payload.auth) {\r\n                return {\r\n                    ...payload.auth,\r\n                };\r\n            }\r\n            return state;\r\n        case 'login':\r\n            return {\r\n                ...payload,\r\n                isAuthenticated: true,\r\n            };\r\n        case 'logout':\r\n            return {\r\n                ...INITIAL_STATE,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistCombineReducers } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport auth from './reducers/auth';\r\n\r\nconst isDevVersion: boolean = process.env.NODE_ENV === 'development';\r\nconst composeEnhancers = composeWithDevTools || compose;\r\nconst middlewares: any = [ReduxThunk];\r\nconst volatileReducers: any = [];\r\n\r\nconst config = {\r\n    key: 'root',\r\n    storage,\r\n    debug: isDevVersion,\r\n    blacklist: volatileReducers,\r\n};\r\n\r\nconst reducers = persistCombineReducers(config, {\r\n    auth,\r\n});\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n    const persistor = persistStore(store, null);\r\n\r\n    return { persistor, store };\r\n};\r\n","import { ThunkDispatch } from 'redux-thunk';\r\nimport { AnyAction } from 'redux';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { LoginPayload } from '../types/auth';\r\nimport { SERVER } from '../api';\r\n\r\n// Login\r\n\r\nexport const loginSuccessActionCreator = (payload: LoginPayload) => {\r\n    return {\r\n        type: 'login',\r\n        payload: payload,\r\n    };\r\n};\r\n\r\nexport const requestLogin = (payload: LoginPayload) => {\r\n    return async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\r\n        try {\r\n            const { username, password } = payload;\r\n            const token = btoa(`${username}:${password}`);\r\n            const { status } = await axios.get(SERVER + '/web/services/z1fr022/comp', {\r\n                headers: { Authorization: `Basic ${token}`, Comp: 'DV' },\r\n            });\r\n\r\n            if (status !== 200) {\r\n                toast.error('Invalid Credentials');\r\n                return;\r\n            }\r\n            dispatch(loginSuccessActionCreator(payload));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\n// Logout\r\n\r\nexport const logoutRequestActionCreator = () => {\r\n    return {\r\n        type: 'logout',\r\n    };\r\n};\r\n\r\nexport const requestLogout = () => {\r\n    return (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\r\n        dispatch(logoutRequestActionCreator());\r\n    };\r\n};\r\n","import axios from 'axios';\r\nimport { Store } from 'redux';\r\n\r\nimport { logoutRequestActionCreator } from './actions/auth';\r\n\r\nexport const SERVER = 'http://12.205.81.230:10021';\r\n\r\nconst setupRequestInterceptor = (store: Store) => {\r\n    axios.interceptors.request.use(\r\n        (reqConfig) => {\r\n            const { auth } = store.getState();\r\n            const { username, password, isAuthenticated } = auth;\r\n            const token = btoa(`${username}:${password}`);\r\n\r\n            const newConfig = reqConfig;\r\n\r\n            if (isAuthenticated) {\r\n                newConfig.headers.Authorization = `Basic ${token}`;\r\n            }\r\n\r\n            return newConfig;\r\n        },\r\n        (err) => Promise.reject(err)\r\n    );\r\n};\r\n\r\nconst setupResponseInterceptor = (store: Store) => {\r\n    axios.interceptors.response.use(\r\n        (response) => {\r\n            return response;\r\n        },\r\n        (error) => {\r\n            if (!error || !error.response || !error.response.config) return Promise.reject(error);\r\n\r\n            if (error.response.status === 401) {\r\n                store.dispatch(logoutRequestActionCreator());\r\n            }\r\n\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n};\r\n\r\nexport const setupAPI = async (store: Store) => {\r\n    axios.create({ withCredentials: true });\r\n    setupRequestInterceptor(store);\r\n    setupResponseInterceptor(store);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nimport { AuthenticationContextProvider } from './AuthenticationContext';\r\nimport { LoginPayload } from '../../types/auth';\r\nimport { requestLogin, requestLogout } from '../../actions/auth';\r\n\r\ninterface StateProps {\r\n    username: string;\r\n    password: string;\r\n    isAuthenticated: boolean;\r\n}\r\n\r\ninterface DispatchProps {\r\n    dispatchRequestLogin: Function;\r\n    dispatchRequestLogout: Function;\r\n}\r\n\r\ninterface OwnProps extends StateProps {\r\n    children: any;\r\n}\r\n\r\ninterface OwnState {}\r\n\r\ntype Props = StateProps & DispatchProps & OwnProps;\r\ntype State = OwnState;\r\n\r\nexport class AuthenticationController extends Component<Props, State> {\r\n    // Login\r\n\r\n    submitLogin = (payload: LoginPayload) => {\r\n        const { dispatchRequestLogin } = this.props;\r\n\r\n        dispatchRequestLogin(payload);\r\n    };\r\n\r\n    // Logout\r\n\r\n    submitLogout = () => {\r\n        const { dispatchRequestLogout } = this.props;\r\n\r\n        dispatchRequestLogout();\r\n    };\r\n\r\n    render() {\r\n        const { children, username, password, isAuthenticated } = this.props;\r\n\r\n        return (\r\n            <AuthenticationContextProvider\r\n                value={{\r\n                    username: username,\r\n                    password: password,\r\n                    isAuthenticated: isAuthenticated,\r\n                    submitLogin: this.submitLogin,\r\n                    submitLogout: this.submitLogout,\r\n                }}\r\n            >\r\n                {children}\r\n            </AuthenticationContextProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        username: state.auth.username,\r\n        password: state.auth.password,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n    };\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>): DispatchProps => ({\r\n    dispatchRequestLogin: (payload: LoginPayload) => dispatch(requestLogin(payload)),\r\n    dispatchRequestLogout: () => dispatch(requestLogout()),\r\n});\r\n\r\nexport const ConnectedAuthenticationController = connect(mapStateToProps, mapDispatchToProps)(AuthenticationController);\r\n","import React, { createContext, ComponentType, FC } from 'react';\r\n\r\nimport { ConnectedAuthenticationController } from './AuthenticationController';\r\nimport { LoginPayload } from '../../types/auth';\r\n\r\nexport interface AuthenticationContext {\r\n    username: string;\r\n    password: string;\r\n    isAuthenticated: boolean;\r\n    submitLogin(payload: LoginPayload): void;\r\n    submitLogout(): void;\r\n}\r\n\r\nexport const authenticationContextDefaultValue = {\r\n    username: '',\r\n    password: '',\r\n    isAuthenticated: false,\r\n    submitLogin: () => {},\r\n    submitLogout: () => {},\r\n};\r\n\r\nconst AuthenticationContext = createContext<AuthenticationContext | null>(authenticationContextDefaultValue);\r\n\r\nexport const AuthenticationContextProvider = AuthenticationContext.Provider;\r\nexport const AuthenticationContextConsumer = AuthenticationContext.Consumer;\r\n\r\nexport const withAuthenticationContext = <P extends object>(\r\n    Component: ComponentType<P>\r\n): FC<Omit<P, keyof AuthenticationContext>> => (props) => (\r\n    <ConnectedAuthenticationController>\r\n        <AuthenticationContextConsumer>\r\n            {(ctx) => <Component {...(props as P)} {...ctx} />}\r\n        </AuthenticationContextConsumer>\r\n    </ConnectedAuthenticationController>\r\n);\r\n","import React from 'react';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"lds-roller\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Add from '@material-ui/icons/AddCircle';\r\nimport Remove from '@material-ui/icons/RemoveCircle';\r\nimport Check from '@material-ui/icons/CheckCircle';\r\nimport Cross from '@material-ui/icons/Cancel';\r\nimport Button from '@material-ui/core/Button';\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport XMLParser from 'react-xml-parser';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Loader from '../elements/Loader';\r\nimport { withAuthenticationContext, AuthenticationContext } from '../controllers/AuthenticationContext';\r\nimport { SERVER } from '../../api';\r\n\r\ninterface OwnProps extends AuthenticationContext {}\r\n\r\ninterface OwnState {\r\n    company: string;\r\n    documentNr: string;\r\n    documentDate: moment.Moment;\r\n    accountPeriod: number;\r\n    interfaceType: string;\r\n    preparedBy: string;\r\n    submitting: boolean;\r\n    linesCreated: number;\r\n    interfaceKey: string;\r\n    validCompany: boolean | undefined;\r\n    validInterface: boolean | undefined;\r\n    validPrepared: boolean | undefined;\r\n    table: string[][];\r\n    tableHeaders: { label: string; value: string }[];\r\n    loggingOut: boolean;\r\n}\r\n\r\nconst now = moment();\r\n\r\nconst initialState: OwnState = {\r\n    company: '',\r\n    documentNr: '',\r\n    documentDate: now,\r\n    accountPeriod: Number(now.format('YYYYMM')),\r\n    interfaceType: '',\r\n    preparedBy: '',\r\n    submitting: false,\r\n    linesCreated: 0,\r\n    interfaceKey: '',\r\n    validCompany: undefined,\r\n    validInterface: undefined,\r\n    validPrepared: undefined,\r\n    table: [\r\n        ['', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n    ],\r\n    tableHeaders: [\r\n        { label: 'Accounting Period', value: 'ACCPERIOD' },\r\n        { label: 'ACCNT(5)', value: 'ACC1' },\r\n        { label: 'DPT(3)', value: 'ACC2' },\r\n        { label: 'CUST(4)', value: 'ACC3' },\r\n        { label: 'BRND(4)', value: 'ACC4' },\r\n        { label: 'SBBR(4)', value: 'ACC5' },\r\n        { label: 'FUT', value: 'ACC6' },\r\n        { label: 'FUT2', value: 'ACC7' },\r\n        { label: 'FUT3', value: 'ACC8' },\r\n        { label: 'Debit Amt', value: 'DEBAMT' },\r\n        { label: 'Credit Amt', value: 'CREAMT' },\r\n        { label: 'Quantity', value: 'QTY' },\r\n        { label: 'Text', value: 'TEXT' },\r\n    ],\r\n    loggingOut: false,\r\n};\r\n\r\nclass Upload extends Component<OwnProps, OwnState> {\r\n    state = initialState;\r\n\r\n    onSelectDay = (date: any) => {\r\n        this.setState({\r\n            documentDate: date,\r\n        });\r\n    };\r\n\r\n    handleChange = (evt: any) => {\r\n        let { validCompany, validInterface, validPrepared } = this.state;\r\n        const { name, value } = evt.target;\r\n        switch (name) {\r\n            case 'company':\r\n                validCompany = undefined;\r\n                break;\r\n            case 'interfaceType':\r\n                validInterface = undefined;\r\n                break;\r\n            case 'preparedBy':\r\n                validPrepared = undefined;\r\n                break;\r\n        }\r\n        this.setState({ ...this.state, [name]: value, validCompany, validInterface, validPrepared });\r\n    };\r\n\r\n    submit = async () => {\r\n        const {\r\n            company,\r\n            interfaceType,\r\n            preparedBy,\r\n            table,\r\n            tableHeaders,\r\n            interfaceKey,\r\n            documentNr,\r\n            documentDate,\r\n            accountPeriod,\r\n        } = this.state;\r\n        this.setState({\r\n            submitting: true,\r\n            validCompany: undefined,\r\n            validInterface: undefined,\r\n            validPrepared: undefined,\r\n        });\r\n\r\n        let validCompany = false;\r\n        let validInterface = false;\r\n        let validPrepared = false;\r\n\r\n        try {\r\n            const comp = await axios.get(SERVER + '/web/services/z1fr022/comp', {\r\n                headers: { Comp: company },\r\n            });\r\n            validCompany = comp.data.VALID === 'Y';\r\n        } catch {}\r\n        this.setState({ validCompany });\r\n\r\n        try {\r\n            const interf = await axios.get(SERVER + '/web/services/z1fr023/inttype', {\r\n                headers: { Comp: company, IntType: interfaceType },\r\n            });\r\n            validInterface = interf.data.VALID === 'Y';\r\n        } catch {}\r\n        this.setState({ validInterface });\r\n\r\n        try {\r\n            const user = await axios.get(SERVER + '/web/services/z1fr024/user', {\r\n                headers: { Comp: company, User: preparedBy },\r\n            });\r\n            validPrepared = user.data.VALID === 'Y';\r\n        } catch {}\r\n        this.setState({ validPrepared });\r\n\r\n        if (!validCompany || !validInterface || !validPrepared) {\r\n            toast.error('Invalid Fields');\r\n            this.setState({ submitting: false });\r\n            return;\r\n        }\r\n        const json: any = [];\r\n        table.forEach((row) => {\r\n            return row.forEach((col, index) => {\r\n                json.push({ [tableHeaders[index].value]: col });\r\n            });\r\n        });\r\n\r\n        const headers = {\r\n            InterfaceKey: interfaceKey,\r\n            coitus: company + interfaceType + preparedBy,\r\n            dodtpe: documentNr + documentDate.format('YYYYMMDD') + accountPeriod,\r\n        };\r\n\r\n        try {\r\n            const result = await axios.post(SERVER + '/web/services/z1fs020/interface', json, { headers: headers });\r\n            const res = new XMLParser().parseFromString(result.data);\r\n            const count = res.children.find((el: any) => el.name === 'INDEX');\r\n            this.setState({ linesCreated: count.value });\r\n            toast.success(`${count.value} Line${count !== 1 ? 's' : ''} Created`);\r\n        } catch {\r\n            toast.error('Error Submitting Data');\r\n        }\r\n\r\n        this.setState({ submitting: false });\r\n    };\r\n\r\n    logout = () => {\r\n        const { submitLogout } = this.props;\r\n        submitLogout();\r\n    };\r\n\r\n    onHeaderChange = (evt: any, index: number) => {\r\n        const { tableHeaders } = this.state;\r\n        tableHeaders[index] = evt.target.value;\r\n        this.setState({ tableHeaders });\r\n    };\r\n\r\n    onTableChange = (evt: any, i: number, j: number) => {\r\n        const { table } = this.state;\r\n        table[i][j] = evt.target.value;\r\n        this.setState({ table });\r\n    };\r\n\r\n    onTablePaste = (evt: any, i: number, j: number) => {\r\n        evt.preventDefault();\r\n        const { table, tableHeaders } = this.state;\r\n        const text = evt.clipboardData.getData('Text');\r\n        let rows = text.split('\\n');\r\n        rows = rows.map((row: string) => row.split('\\t'));\r\n        rows.forEach((row: string[], y: number) => {\r\n            if (row.some((el) => el !== '')) {\r\n                row.forEach((col: string, x: number) => {\r\n                    if (table[i + y] === undefined) {\r\n                        table[i + y] = tableHeaders.map((ignored) => '');\r\n                    }\r\n                    table[i + y][j + x] = col;\r\n                });\r\n            }\r\n        });\r\n        this.setState({ table });\r\n    };\r\n\r\n    addRow = () => {\r\n        const { tableHeaders, table } = this.state;\r\n        const row: string[] = [];\r\n        tableHeaders.forEach((ignored) => {\r\n            row.push('');\r\n        });\r\n        table.push(row);\r\n        this.setState({ table });\r\n    };\r\n\r\n    removeRow = () => {\r\n        const { table } = this.state;\r\n        if (table.length > 1) {\r\n            table.pop();\r\n            this.setState({ table });\r\n        }\r\n    };\r\n\r\n    renderHeader() {\r\n        const {\r\n            company,\r\n            documentNr,\r\n            documentDate,\r\n            accountPeriod,\r\n            interfaceType,\r\n            preparedBy,\r\n            validCompany,\r\n            validPrepared,\r\n            validInterface,\r\n            submitting,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"header-info\">\r\n                {validCompany !== undefined ? (\r\n                    <TextField\r\n                        disabled={submitting}\r\n                        required\r\n                        label=\"Company\"\r\n                        value={company}\r\n                        onChange={this.handleChange}\r\n                        name=\"company\"\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    {validCompany ? <Check className=\"check\" /> : <Cross className=\"cross\" />}\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        disabled={submitting}\r\n                        required\r\n                        label=\"Company\"\r\n                        value={company}\r\n                        onChange={this.handleChange}\r\n                        name=\"company\"\r\n                        variant=\"filled\"\r\n                    />\r\n                )}\r\n                <TextField\r\n                    disabled={submitting}\r\n                    required\r\n                    label=\"Document No\"\r\n                    value={documentNr}\r\n                    onChange={this.handleChange}\r\n                    name=\"documentNr\"\r\n                    variant=\"filled\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        disabled={submitting}\r\n                        variant=\"inline\"\r\n                        format=\"MM-DD-yyyy\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Document Date\"\r\n                        value={documentDate}\r\n                        onChange={this.onSelectDay}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                        required\r\n                        inputVariant=\"filled\"\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <TextField\r\n                    disabled={submitting}\r\n                    required\r\n                    label=\"Accounting Period\"\r\n                    value={accountPeriod}\r\n                    onChange={this.handleChange}\r\n                    name=\"accountPeriod\"\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                />\r\n                {validInterface !== undefined ? (\r\n                    <TextField\r\n                        disabled={submitting}\r\n                        required\r\n                        label=\"Interface Type\"\r\n                        value={interfaceType}\r\n                        onChange={this.handleChange}\r\n                        name=\"interfaceType\"\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    {validInterface ? <Check className=\"check\" /> : <Cross className=\"cross\" />}\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        disabled={submitting}\r\n                        required\r\n                        label=\"Interface Type\"\r\n                        value={interfaceType}\r\n                        onChange={this.handleChange}\r\n                        name=\"interfaceType\"\r\n                        variant=\"filled\"\r\n                    />\r\n                )}\r\n                {validPrepared !== undefined ? (\r\n                    <TextField\r\n                        disabled={submitting}\r\n                        required\r\n                        label=\"Prepared By\"\r\n                        value={preparedBy}\r\n                        onChange={this.handleChange}\r\n                        name=\"preparedBy\"\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    {validPrepared ? <Check className=\"check\" /> : <Cross className=\"cross\" />}\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <TextField\r\n                        disabled={submitting}\r\n                        required\r\n                        label=\"Prepared By\"\r\n                        value={preparedBy}\r\n                        onChange={this.handleChange}\r\n                        name=\"preparedBy\"\r\n                        variant=\"filled\"\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    totalDebits = () => {\r\n        const { tableHeaders, table } = this.state;\r\n        let debits = 0;\r\n        const index = tableHeaders.findIndex((el) => el.label === 'Debit Amt');\r\n        if (index !== -1) {\r\n            table.forEach((row) => {\r\n                if (!isNaN(Number(row[index]))) {\r\n                    debits += Number(row[index]);\r\n                }\r\n            });\r\n        }\r\n        return debits;\r\n    };\r\n\r\n    totalCredits = () => {\r\n        const { tableHeaders, table } = this.state;\r\n        let debits = 0;\r\n        const index = tableHeaders.findIndex((el) => el.label === 'Credit Amt');\r\n        if (index !== -1) {\r\n            table.forEach((row) => {\r\n                if (!isNaN(Number(row[index]))) {\r\n                    debits += Number(row[index]);\r\n                }\r\n            });\r\n        }\r\n        return debits;\r\n    };\r\n\r\n    renderSideContent() {\r\n        const { submitting, linesCreated, interfaceKey } = this.state;\r\n        return (\r\n            <div className=\"side-content\">\r\n                <div className=\"left-container\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.submit} disabled={submitting}>\r\n                        Upload GL Journal\r\n                    </Button>\r\n                    <TextField label=\"Lines Created\" value={linesCreated} variant=\"filled\" disabled />\r\n                    {submitting && <Loader />}\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <TextField\r\n                        name=\"interfaceKey\"\r\n                        disabled={submitting}\r\n                        required\r\n                        value={interfaceKey}\r\n                        label=\"Interface Key\"\r\n                        onChange={this.handleChange}\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Total Debits</TableCell>\r\n                                    <TableCell align=\"center\">Total Credits</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">{this.totalDebits().toFixed(2)}</TableCell>\r\n                                    <TableCell align=\"center\">{this.totalCredits().toFixed(2)}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Difference</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {(this.totalDebits() - this.totalCredits()).toFixed(2)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTable() {\r\n        const { tableHeaders, table, submitting } = this.state;\r\n        return (\r\n            <div className=\"table-container\">\r\n                <div className=\"row-controls\">\r\n                    <Remove onClick={this.removeRow} />\r\n                    <Add onClick={this.addRow} />\r\n                </div>\r\n                <TableContainer component={Paper} className=\"input-table\">\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {tableHeaders.map((header) => (\r\n                                    <TableCell align=\"center\" key={header.value}>\r\n                                        {header.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {table.map((row: string[], i: number) => (\r\n                                <TableRow key={i}>\r\n                                    {row.map((el: string, j: number) => (\r\n                                        <TableCell align=\"center\" key={j}>\r\n                                            <TextField\r\n                                                disabled={submitting}\r\n                                                value={el}\r\n                                                onChange={(evt) => this.onTableChange(evt, i, j)}\r\n                                                onPaste={(evt) => this.onTablePaste(evt, i, j)}\r\n                                            />\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { loggingOut } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"header-container\">\r\n                    {this.renderHeader()}\r\n                    {this.renderSideContent()}\r\n                </div>\r\n                {this.renderTable()}\r\n                <div className=\"logout-container\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.setState({ loggingOut: true })}>\r\n                        <LogoutIcon />\r\n                        Logout\r\n                    </Button>\r\n                </div>\r\n                <Dialog\r\n                    open={loggingOut}\r\n                    onClose={() => this.setState({ loggingOut: false })}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">Log Out?</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Area you sure you want to Log Out?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => this.setState({ loggingOut: false })} color=\"primary\">\r\n                            No\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                this.setState({ loggingOut: false });\r\n                                this.logout();\r\n                            }}\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAuthenticationContext(Upload);\r\n","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { withAuthenticationContext, AuthenticationContext } from '../controllers/AuthenticationContext';\r\n\r\ninterface OwnProps extends AuthenticationContext {}\r\n\r\ninterface OwnState {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nconst initialState: OwnState = {\r\n    username: '',\r\n    password: '',\r\n};\r\n\r\nclass Upload extends Component<OwnProps, OwnState> {\r\n    state = initialState;\r\n\r\n    handleChange = (evt: any) => {\r\n        const { name, value } = evt.target;\r\n        this.setState({ ...this.state, [name]: value });\r\n    };\r\n\r\n    login = () => {\r\n        const { submitLogin } = this.props;\r\n        submitLogin(this.state);\r\n    };\r\n\r\n    render() {\r\n        const { username, password } = this.state;\r\n        return (\r\n            <div className=\"login-container\">\r\n                <TextField\r\n                    required\r\n                    label=\"Username\"\r\n                    value={username}\r\n                    onChange={this.handleChange}\r\n                    name=\"username\"\r\n                    variant=\"filled\"\r\n                />\r\n                <TextField\r\n                    required\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                    name=\"password\"\r\n                    variant=\"filled\"\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.login}>\r\n                    Login\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAuthenticationContext(Upload);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withAuthenticationContext, AuthenticationContext } from '../controllers/AuthenticationContext';\r\nimport Upload from '../views/Upload';\r\nimport Login from '../views/Login';\r\n\r\ninterface OwnProps extends AuthenticationContext {}\r\n\r\ninterface OwnState {}\r\n\r\nclass Parent extends Component<OwnProps, OwnState> {\r\n    render() {\r\n        const { isAuthenticated } = this.props;\r\n        if (isAuthenticated) {\r\n            return <Upload />;\r\n        }\r\n        return <Login />;\r\n    }\r\n}\r\n\r\nexport default withAuthenticationContext(Parent);\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { configureStore } from './store';\nimport { setupAPI } from './api';\nimport './App.scss';\nimport Parent from './components/screens/Parent';\n\nconst { persistor, store } = configureStore();\nsetupAPI(store);\n\ninterface OwnProps {}\n\ninterface OwnState {}\n\nconst initialState: OwnState = {};\n\nexport default class App extends Component<OwnProps, OwnState> {\n    state = initialState;\n\n    render() {\n        return (\n            <PersistGate persistor={persistor}>\n                <Provider store={store}>\n                    <ToastContainer position=\"bottom-right\" />\n                    <Parent />\n                </Provider>\n            </PersistGate>\n        );\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}